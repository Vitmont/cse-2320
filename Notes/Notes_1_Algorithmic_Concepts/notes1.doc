Algorithms Notes 1

Bad Sorts: Run in Quadratic Time, time proportional to n squared
sorts- take a set and order in respect to a whole order
  -Selection- bad implementation of heap sort, n^2/2 time
  -Insertion- amount of effort is proportional to how sorted is the input
    works almost as a clean up sort

  Divide and Conquer (Decomposition)
    - Divide into subproblems
    - Conquer the subproblems
    - Combine the solutions to the subproblems

  (Binary) Mergesort - "Optimal" Key-Comparison Sort
    - Split (copy) array into two sub arrays (unless n<2)
    - Call Mergesort recursively for each sub-array
    - Merge together the two ordered sub-arrays
